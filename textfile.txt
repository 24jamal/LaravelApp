#0:52:25 Factories & Seeders



C:\Users\jamaludeen\Herd\laravel-medium-clone>php artisan db:seed --class=PostSeeder

   INFO  Seeding database.




C:\Users\jamaludeen\Herd\laravel-medium-clone>php artisan migrate

   INFO  Running migrations.

--------------------------------------------------------------------------------------------------------

Date : 20-07-2025:

1:05:13 Output Categories & Posts :

--------------------------------------------------------------------------------------------------

Date : 22-07-2025:

1:27:09 Pagination :


CMD : C:\Users\jamaludeen\Herd\laravel-medium-clone>php artisan vendor:publish --tag=laravel-pagination 
Executes : Creates multiple bootstrap files in C:\Users\jamaludeen\Herd\laravel-medium-clone\resources\views\vendor\pagination\  path folder

---------------------------------------------------------------------------------------------------
Date : 22-07-2025:

1:33:19 Blade Directives:

https://laravel.com/docs/12.x/blade --> Refer this for Blade Directives 

In Project : I added forelse instaed of foreach
Refer Code commits exact changes.
----------------------------------------------------------------------------------------------------
Date : 22-07-2025:

1:37:46 Components

Commands executed::

C:\Users\jamaludeen\Herd\laravel-medium-clone>php artisan make:component PostItem --view

   INFO  View [C:\Users\jamaludeen\Herd\laravel-medium-clone\resources\views\components/post-item.blade.php] created successfully.  



C:\Users\jamaludeen\Herd\laravel-medium-clone>php artisan migrate:fresh --seed

  Dropping all tables ................................................................................................................. 16.80ms DONE

   INFO  Preparing database.  

  Creating migration table ............................................................................................................. 8.79ms DONE

   INFO  Running migrations.  

  0001_01_01_000000_create_users_table ................................................................................................ 34.58ms DONE
  0001_01_01_000001_create_cache_table ................................................................................................. 6.43ms DONE
  0001_01_01_000002_create_jobs_table ................................................................................................. 18.39ms DONE
  2025_07_14_175449_create_categories_table ............................................................................................ 7.97ms DONE
  2025_07_14_175513_create_posts_table ................................................................................................ 24.42ms DONE


   INFO  Seeding database.  

  Database\Seeders\PostSeeder .............................................................................................................. RUNNING  
  Database\Seeders\PostSeeder ............................................................................................................ 0 ms DONE  



-----------------------------------------------------------------------------------------------------------------------------------------------------

Date : 26-07-2025

In Laravel, a layout is a template file that defines the common structure of your web pages, such as the header, footer, navigation, and overall HTML structure.
It allows you to reuse this common code across multiple views, so your application is DRY (Don't Repeat Yourself) and easier to maintain.

Laravel uses the Blade templating engine, and layouts are typically created using Blade syntax.

Why Use Layouts?

* *Imagine you have 10 pages, and all of them share the same header and footer. Instead of copying the same code to every view, you can:

* Put that code in a layout file.

* Each individual view will just define its content section, and extend the layout.

----------------------------------------------------------------------------------------

Date : 10-08-2025
Time : 2:08:10 Create New Post

Generated Using ChatGPT:

Each file and steps use in this laravel tutorial section:
 1. `web.php` (Routes File)

Purpose:
This file defines URLs (routes) that map to controller methods. It tells Laravel:

> "When the user visits a specific URL, run this function."

Code from snippet:

php
Route::middleware(['auth', 'verified'])->group(function () {
    Route::get('posts/create', [PostController::class, 'create'])->name('posts.create');
    Route::post('posts', [PostController::class, 'store'])->name('posts.store');
});


Why it’s used:

* `auth` middleware → Only logged-in users can access.
* `verified` middleware → Ensures email is verified.
* `GET` route → Shows the "Create Post" form.
* `POST` route → Saves new post data into the database.



 2. `PostController.php` (Controller)

Purpose:
Acts as the middleman between the view (HTML form) and the model (database).
It contains logic for creating and storing posts.

Methods:

* `create()` → Loads the form view.
* `store(Request $request)` → Handles form submission.

Why it’s used:

* Validates form input.
* Uploads image if provided.
* Saves post to DB with the logged-in user's ID.
* Redirects user after saving.



 3. `create_posts_table.php` (Migration)

Purpose:
Defines the database table structure for posts.

Why it’s used:

* Laravel migrations let you create/update DB tables with code instead of manual SQL.
* This migration creates columns like `title`, `body`, `category_id`, `image_path`.
* Also adds relationships:

  * `user_id` → which user created the post.
  * `category_id` → category assigned to the post.



 4. `create.blade.php` (View Template)

Purpose:
This is the HTML form where users type in their post title, body, and optionally upload an image.

Why it’s used:

* Uses Blade syntax (`{{ }}`) to dynamically display old values and categories from DB.
* Has `@csrf` token → protects against CSRF attacks.
* Uses `enctype="multipart/form-data"` → allows file uploads.



 Steps to Create the "New Post" Feature

 Step 1: Create Migration & Model

bash
php artisan make:model Post -m


* Edits migration to add title, body, image\_path, category\_id, user\_id.
* Run migration:

bash
php artisan migrate




 Step 2: Create Controller

bash
php artisan make:controller PostController


* Add `create()` and `store()` methods to handle form and data saving.



 Step 3: Define Routes

* In `routes/web.php`, add `posts.create` and `posts.store` routes with middleware.



 Step 4: Create Blade View

* In `resources/views/posts/create.blade.php`, add HTML form with fields for title, body, category, and image.



 Step 5: Test Feature

* Login → go to `/posts/create` → fill form → submit → check database for new record.


